#### Note: all these items should go into the issue tracker.
#### I just can't access it while on the train.
####
#### Help appreciated!
#### If you'd like to help, just tell me on dev@fsvs.tigris.org what
#### you'd like to do - I can give you the current status, and some tips
#### what's already here.


# PERFORMANCE
- don't MD5 all possibly changed files on update or commit.
  - on update only necessary files (which get updated and may be changed),

- use the Manber-blocks on commit (copy_window)

- 1 thread for reading in input_tree, some threads for lstat()
  and/or verifying? (some simultaneous requests to hard disk)
	-> Patch available, brings no speedup on linux/ext3 (readahead?)

- special-case in update_dir for full-wildcard x/y/z/* ?

- test times: change Makefile to get parallel tests, test summary


# PROPERTIES
- store ignore list in svn:ignore or some such

- How about hardlinks? detect and use copyfrom?
  - copyfrom "destroys" the history - need hardlinks in repository
	  (issue XXXX)


# SECURITY
- authentication for ra - ask for username/password

- set capabilities to minimum needed


- use .waa-cfg for configuration (diff, merge, ...)

- fsvs symlink - to ease support and administration in the waa-area (make symlink "root" -> 66/66/dc.../)


# ?

- store/use copyfrom path for files
- flag for file which should always be opened/mmaped or similar
  (boot/startup) 

- use filesystem snapshots - during boot it could run in parallel
  - maybe better: unionfs
	- could be done with some shell scripts around.
	  1. mount partition, lv or (binding) directory "over" / for fsvs
		2. store a flag that this data has to be moved (checked on next boot)
		3. do an update
		4. move data from here to original / (out of unionfs)
		5. remove flag
- Offer some help from fsvs - give a "chroot" parameter? (no real chroot
	done, else $WAA inaccessible - only for file writes?)
	- could be used for commit too!!


# Currently ignored
- ignore-lists: split into per-directory

